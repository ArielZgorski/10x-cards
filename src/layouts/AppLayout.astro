---
import Layout from './Layout.astro';
import { AuthProvider } from '../components/auth/AuthProvider';

interface Props {
  title?: string;
  currentPage?: 'generations' | 'decks' | 'study' | 'statistics' | 'profile';
}

const { title = "10x Cards", currentPage } = Astro.props;
---

<Layout title={title} requireAuth={true}>
  <AuthProvider client:only="react">
    <div class="app-layout">
      <!-- Sidebar -->
      <nav class="sidebar">
        <div class="sidebar-header">
          <h1 class="logo">10x Cards</h1>
          <div class="user-info" id="user-info">
            <div class="user-avatar">
              <svg class="user-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
            </div>
            <div class="user-details">
              <span class="user-email" id="user-email">Loading...</span>
            </div>
          </div>
        </div>
      
      <div class="nav-menu">
        <a href="/ai/generations" class={`nav-item ${currentPage === 'generations' ? 'active' : ''}`}>
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
          </svg>
          Generowanie AI
        </a>
        
        <a href="/decks" class={`nav-item ${currentPage === 'decks' ? 'active' : ''}`}>
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
          </svg>
          Decki
        </a>
        
        <a href="/study" class={`nav-item ${currentPage === 'study' ? 'active' : ''}`}>
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
          </svg>
          Sesja nauki
        </a>
        
        <a href="/statistics" class={`nav-item ${currentPage === 'statistics' ? 'active' : ''}`}>
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
          </svg>
          Statystyki
        </a>
        
        <a href="/profile" class={`nav-item ${currentPage === 'profile' ? 'active' : ''}`}>
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
          </svg>
          Profil
        </a>
      </div>
      
      <div class="sidebar-footer">
        <button class="logout-btn" id="logout-btn">
          <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
          </svg>
          <span class="logout-text">Wyloguj siÄ™</span>
          <svg class="logout-spinner hidden" viewBox="0 0 24 24">
            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"/>
            <path d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" fill="currentColor"/>
          </svg>
        </button>
      </div>
    </nav>
    
    <!-- Main content -->
    <main class="main-content">
      <slot />
    </main>
  </div>
  </AuthProvider>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Initialize user info display
    const userEmailElement = document.getElementById("user-email");
    const logoutBtn = document.getElementById("logout-btn");
    const logoutText = logoutBtn.querySelector(".logout-text");
    const logoutSpinner = logoutBtn.querySelector(".logout-spinner");
  
    // Display user email from global auth state
    if (window.authState?.user?.email && userEmailElement) {
      userEmailElement.textContent = window.authState.user.email;
    }
  
    // Enhanced logout function with loading state
    const logout = async () => {
      if (logoutBtn.disabled) return;
  
      // Show loading state
      logoutBtn.disabled = true;
      logoutText.classList.add("hidden");
      logoutSpinner.classList.remove("hidden");
  
      try {
        // Use global logout function from Layout.astro
        if (window.logout) {
          await window.logout();
        } else {
          // Fallback logout
          await fetch("/api/auth/signout", {
            method: "POST",
            credentials: "include",
          });
          window.location.href = "/login";
        }
      } catch (error) {
        console.error("Logout error:", error);
  
        // Reset button state
        logoutBtn.disabled = false;
        logoutText.classList.remove("hidden");
        logoutSpinner.classList.add("hidden");
  
        // Force logout even if API fails
        window.location.href = "/login";
      }
    };
  
    // Attach logout handler
    logoutBtn.addEventListener("click", logout);
  
    // Listen for auth state changes
    const handleAuthStateChange = () => {
      if (window.authState?.user?.email && userEmailElement) {
        userEmailElement.textContent = window.authState.user.email;
      } else if (!window.authState?.isAuthenticated) {
        window.location.href = "/login";
      }
    };
  
    // Listen for auth errors from other parts of the app
    window.addEventListener("auth-error", () => {
      window.location.href = "/login";
    });
  
    // Listen for global auth state changes
    window.addEventListener("auth-state-changed", handleAuthStateChange);
  });
</script>

<style>
  .app-layout {
    display: flex;
    min-height: 100vh;
  }
  
  .sidebar {
    width: 280px;
    background: white;
    border-right: 1px solid #e5e7eb;
    display: flex;
    flex-direction: column;
    position: fixed;
    left: 0;
    top: 0;
    height: 100vh;
    z-index: 10;
  }
  
  .sidebar-header {
    padding: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
  }
  
  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    color: #1f2937;
  }
  
  .user-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background-color: #f9fafb;
    border-radius: 0.5rem;
    border: 1px solid #e5e7eb;
  }
  
  .user-avatar {
    width: 2.5rem;
    height: 2.5rem;
    background: #3b82f6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }
  
  .user-icon {
    width: 1.25rem;
    height: 1.25rem;
    color: white;
  }
  
  .user-details {
    flex: 1;
    min-width: 0;
  }
  
  .user-email {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .nav-menu {
    flex: 1;
    padding: 1rem 0;
  }
  
  .nav-item {
    display: flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    color: #6b7280;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .nav-item:hover {
    background-color: #f9fafb;
    color: #1f2937;
  }
  
  .nav-item.active {
    background-color: #dbeafe;
    color: #1d4ed8;
    border-right: 3px solid #1d4ed8;
  }
  
  .nav-icon {
    width: 1.25rem;
    height: 1.25rem;
    margin-right: 0.75rem;
  }
  
  .sidebar-footer {
    padding: 1rem;
    border-top: 1px solid #e5e7eb;
  }
  
  .logout-btn {
    display: flex;
    align-items: center;
    width: 100%;
    padding: 0.75rem 1rem;
    background: none;
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
    color: #6b7280;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .logout-btn:hover:not(:disabled) {
    background-color: #f9fafb;
    color: #1f2937;
  }
  
  .logout-btn:disabled {
    opacity: 0.75;
    cursor: not-allowed;
  }
  
  .logout-spinner {
    width: 1rem;
    height: 1rem;
    animation: spin 1s linear infinite;
  }
  
  .hidden {
    display: none;
  }
  
  .main-content {
    flex: 1;
    margin-left: 280px;
    min-height: 100vh;
  }
  
  /* Mobile responsive */
  @media (max-width: 768px) {
    .sidebar {
      width: 100%;
      height: auto;
      position: relative;
    }
    
    .main-content {
      margin-left: 0;
    }
    
    .sidebar-header {
      padding: 1rem;
    }
    
    .logo {
      font-size: 1.25rem;
      margin-bottom: 0.75rem;
    }
    
    .user-info {
      padding: 0.5rem;
      gap: 0.5rem;
    }
    
    .user-avatar {
      width: 2rem;
      height: 2rem;
    }
    
    .user-icon {
      width: 1rem;
      height: 1rem;
    }
    
    .user-email {
      font-size: 0.75rem;
    }
    
    .nav-menu {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
      gap: 0.5rem;
      padding: 1rem;
    }
    
    .nav-item {
      flex-direction: column;
      text-align: center;
      padding: 1rem 0.5rem;
      border-radius: 0.5rem;
    }
    
    .nav-icon {
      margin-right: 0;
      margin-bottom: 0.25rem;
    }
    
    .sidebar-footer {
      padding: 0.75rem;
    }
    
    .logout-btn {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
  }
  
  /* Animation keyframes */
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>

